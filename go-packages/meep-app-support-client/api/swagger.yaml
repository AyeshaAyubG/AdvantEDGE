openapi: 3.0.2
info:
  title: MEC Application Support API
  description: The ETSI MEC ISG MEC011 MEC Application Support API described using
    OpenAPI
  contact:
    name: InterDigital AdvantEDGE Support
    email: AdvantEDGE@InterDigital.com
  license:
    name: Apache 2.0
    url: https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE
  version: 2.2.1
externalDocs:
  description: "MEC Application Support Service is AdvantEDGE's implementation of\
    \ [ETSI MEC ISG MEC011 Application Enablement API](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.02.01_60/gs_MEC011v020201p.pdf)\
    \ <p>[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\
    \ <p>**Micro-service**<br>[meep-app-enablement](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-app-enablement/server/app-support)\
    \ <p>**Type & Usage**<br>Edge Service used by edge applications that want to get\
    \ information about applications in the network <p>**Note**<br>AdvantEDGE supports\
    \ a selected subset of Application Support API endpoints (see below)."
  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.02.01_60/gs_MEC011v020201p.pdf
servers:
- url: https://localhost/mec_app_support/v1
security:
- {}
tags:
- name: mec_app_support
- name: unsupported
- name: callbacks
paths:
  /applications/{appInstanceId}/traffic_rules:
    get:
      tags:
      - unsupported
      description: This method retrieves information about all the traffic rules associated
        with a MEC application instance.
      operationId: ApplicationsTrafficRules_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                type: array
                example:
                - trafficRuleId: TrafficRule123
                  serName: ExampleService
                  filterType: FLOW
                  priority: 1
                  trafficFilter:
                  - srcAddress:
                    - 192.168.2.0/24
                    - 192.168.3.0/24
                    dstAddress:
                    - 192.127.4.100/32
                    dstPort:
                    - "80"
                  action: FORWARD_DECAPSULATED
                  dstInterface:
                  - dstInterface0: null
                    interfaceType: IP
                    dstIpAddress: 20.1.1.1
                  - dstInterface1: null
                    interfaceType: IP
                    dstIpAddress: 20.1.1.2
                  state: ACTIVE
                items:
                  $ref: '#/components/schemas/TrafficRule'
                x-content-type: application/json
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/traffic_rules/{trafficRuleId}:
    get:
      tags:
      - unsupported
      description: This method retrieves information about all the traffic rules associated
        with a MEC application instance.
      operationId: ApplicationsTrafficRule_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: trafficRuleId
        in: path
        description: Represents a traffic rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficRule'
              example:
                TrafficRule:
                  value:
                    trafficRuleId: TrafficRule123
                    serName: ExampleService
                    filterType: FLOW
                    priority: 1
                    trafficFilter:
                    - srcAddress:
                      - 192.168.2.0/24
                      - 192.168.3.0/24
                      dstAddress:
                      - 192.127.4.100/32
                      dstPort:
                      - "80"
                    action: FORWARD_DECAPSULATED
                    dstInterface:
                    - dstInterface0: null
                      interfaceType: IP
                      dstIpAddress: 20.1.1.1
                    state: ACTIVE
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
    put:
      tags:
      - unsupported
      description: This method retrieves information about all the traffic rules associated
        with a MEC application instance.
      operationId: ApplicationsTrafficRule_PUT
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: trafficRuleId
        in: path
        description: Represents a traffic rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: One or more updated attributes that are allowed to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficRule'
        required: true
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficRule'
              example:
                TrafficRule:
                  value:
                    trafficRuleId: TrafficRule123
                    serName: ExampleService
                    filterType: FLOW
                    priority: 1
                    trafficFilter:
                    - srcAddress:
                      - 192.168.2.0/24
                      - 192.168.3.0/24
                      dstAddress:
                      - 192.127.4.100/32
                      dstPort:
                      - "80"
                    action: FORWARD_DECAPSULATED
                    dstInterface:
                    - dstInterface0: null
                      interfaceType: IP
                      dstIpAddress: 20.1.1.1
                    state: ACTIVE
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "412":
          description: "Precondition Failed. It is used when a condition has failed\
            \ during conditional requests,  e.g. when using ETags to avoid write conflicts."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/dns_rules:
    get:
      tags:
      - unsupported
      description: This method retrieves information about all the DNS rules associated
        with a MEC application instance.
      operationId: ApplicationsDnsRules_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                type: array
                example:
                - dnsRuleId: DnsRule1
                  domainName: www.example.com
                  ipAddressType: IP_V4
                  ipAddress: 146.241.7.3
                  ttl: 300
                  state: ACTIVE
                items:
                  $ref: '#/components/schemas/DnsRule'
                x-content-type: application/json
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/dns_rules/{dnsRuleId}:
    get:
      tags:
      - unsupported
      description: This method retrieves information about a DNS rule associated with
        a MEC application instance.
      operationId: ApplicationsDnsRule_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dnsRuleId
        in: path
        description: Represents a DNS rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRule'
              example:
                DnsRule:
                  value:
                    dnsRuleId: DnsRule1
                    domainName: www.example.com
                    ipAddressType: IP_V4
                    ipAddress: 146.241.7.3
                    ttl: 300
                    state: ACTIVE
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
    put:
      tags:
      - unsupported
      description: "This method activates, de-activates or updates a traffic rule."
      operationId: ApplicationsDnsRule_PUT
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dnsRuleId
        in: path
        description: Represents a DNS rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The updated state is included in the entity body of the request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRule'
        required: true
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRule'
              example:
                DnsRule:
                  value:
                    dnsRuleId: DnsRule1
                    domainName: www.example.com
                    ipAddressType: IP_V4
                    ipAddress: 146.241.7.3
                    ttl: 300
                    state: ACTIVE
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "412":
          description: "Precondition Failed. It is used when a condition has failed\
            \ during conditional requests,  e.g. when using ETags to avoid write conflicts."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/subscriptions:
    get:
      tags:
      - mec_app_support
      description: "The GET method may be used to request information about all subscriptions\
        \ for this requestor. Upon success, the response contains entity body with\
        \ all the subscriptions for the requestor."
      operationId: ApplicationsSubscriptions_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, a response body containing the list of links\
            \ to the requested subscriptions is returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MecAppSuptApiSubscriptionLinkList'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
    post:
      tags:
      - mec_app_support
      description: "The POST method may be used to create a new subscription. One\
        \ example use case is to create a new subscription to the MEC service availability\
        \ notifications. Upon success, the response contains entity body describing\
        \ the created subscription."
      operationId: ApplicationsSubscriptions_POST
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Entity body in the request contains a subscription to the MEC
          application termination notifications that is to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppTerminationNotificationSubscription'
        required: true
      responses:
        "201":
          description: Entity body in the request contains a subscription to the  MEC
            service availability notifications that is to be created.
          headers:
            location:
              description: The resource URI of the created resource
              style: simple
              explode: false
              content:
                text/plain:
                  schema:
                    type: string
                    description: The resource URI of the created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTerminationNotificationSubscription'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      callbacks:
        AppTerminationNotification:
          '{$request.body#/callbackUri}':
            post:
              tags:
              - callbacks
              description: Represents the information that the MEP notifies the subscribed
                application instance about the corresponding application instance
                termination/stop'
              operationId: AppTerminationNotification_POST
              requestBody:
                $ref: '#/components/requestBodies/AppTerminationNotification'
              responses:
                "200":
                  description: "Expected responses from callback consumer, if it accepts\
                    \ the callback"
  /applications/{appInstanceId}/subscriptions/{subscriptionId}:
    get:
      tags:
      - mec_app_support
      description: "The GET method requests information about a subscription for this\
        \ requestor. Upon success, the response contains entity body with the subscription\
        \ for the requestor."
      operationId: ApplicationsSubscription_GET
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: Represents a subscription to the notifications from the MEC platform.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, a response body containing the requested subscription\
            \ is returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTerminationNotificationSubscription'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
    delete:
      tags:
      - mec_app_support
      description: This method deletes a mecAppSuptApiSubscription. This method is
        typically used in "Unsubscribing from service availability event notifications"
        procedure.
      operationId: ApplicationsSubscription_DELETE
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: Represents a subscription to the notifications from the MEC platform.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/confirm_termination:
    post:
      tags:
      - mec_app_support
      description: This method is used to confirm the application level termination  of
        an application instance.
      operationId: ApplicationsConfirmTermination_POST
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppTerminationConfirmation'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized. It is used when the client did not submit the
            appropriate credentials.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "409":
          description: "Conflict. The operation cannot be executed currently, due\
            \ to a conflict with  the state of the resource. Typically, this is because\
            \ the application  instance resource is in NOT_INSTANTIATED state."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "429":
          description: Too Many Requests. It is used when a rate limiter has triggered.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /applications/{appInstanceId}/confirm_ready:
    post:
      tags:
      - mec_app_support
      description: 'This method may be used by the MEC application instance to notify
        the MEC platform that it is up and running. '
      operationId: ApplicationsConfirmReady_POST
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppReadyConfirmation'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized. It is used when the client did not submit the
            appropriate credentials.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "409":
          description: "Conflict. The operation cannot be executed currently, due\
            \ to a conflict with  the state of the resource. Typically, this is because\
            \ the application  instance resource is in NOT_INSTANTIATED state."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "429":
          description: Too Many Requests. It is used when a rate limiter has triggered.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /timing/timing_caps:
    get:
      tags:
      - mec_app_support
      description: This method retrieves the information of the platform's timing
        capabilities which corresponds to the timing capabilities query
      operationId: TimingCaps_GET
      parameters: []
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimingCaps'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
  /timing/current_time:
    get:
      tags:
      - mec_app_support
      description: This method retrieves the information of the platform's current
        time which corresponds to the get platform time procedure
      operationId: TimingCurrentTime_GET
      parameters: []
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentTime'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
components:
  schemas:
    AppReadyConfirmation:
      title: AppReadyConfirmation
      required:
      - indication
      type: object
      properties:
        indication:
          type: string
          description: Indication about the MEC application instance.
      description: This type represents the information that the MEC application instance
        indicates to the MEC platform that it is up and running.
    AppTerminationConfirmation:
      title: AppTerminationConfirmation
      required:
      - operationAction
      type: object
      properties:
        operationAction:
          $ref: '#/components/schemas/OperationActionType'
      description: "This type represents the information that the MEC application\
        \ instance provides to the MEC platform when informing it that the application\
        \ has completed its application level related terminate/stop actions, e.g.\
        \ retention of application state in the case of stop."
    AppTerminationNotificationLinks:
      title: AppTerminationNotificationLinks
      required:
      - subscription
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
        confirmTermination:
          $ref: '#/components/schemas/LinkTypeConfirmTermination'
      description: Object containing hyperlinks related to the resource.
    AppTerminationNotification:
      title: AppTerminationNotification
      required:
      - _links
      - maxGracefulTimeout
      - notificationType
      - operationAction
      type: object
      properties:
        notificationType:
          type: string
          description: Shall be set to AppTerminationNotification.
          example: "[\"AppTerminationNotification\"]"
        operationAction:
          $ref: '#/components/schemas/OperationActionType'
        maxGracefulTimeout:
          type: integer
          description: Maximum timeout value in seconds for graceful termination or
            graceful stop of an application instance.
        _links:
          $ref: '#/components/schemas/AppTerminationNotificationLinks'
      description: This type represents the information that the MEC platform notifies
        the subscribed application instance about  the corresponding application instance
        termination/stop.
    AppTerminationNotificationSubscription:
      title: AppTerminationNotificationSubscription
      required:
      - _links
      - appInstanceId
      - callbackReference
      - subscriptionType
      type: object
      properties:
        subscriptionType:
          type: string
          description: Shall be set to AppTerminationNotificationSubscription.
          example: "[\"AppTerminationNotificationSubscription\"]"
        callbackReference:
          type: string
          description: URI selected by the MEC application instance to receive notifications
            on the subscribed MEC application instance management information. This
            shall be included in both the request and the response.
        _links:
          $ref: '#/components/schemas/Self'
        appInstanceId:
          type: string
          description: It is used as the filtering criterion for the subscribed events.
          example: "[\"ID1\"]"
      description: This type represents the information that the MEC platform notifies
        the subscribed application instance about  the corresponding application instance
        termination/stop.
      example:
        appInstanceId: "[\"ID1\"]"
        subscriptionType: "[\"AppTerminationNotificationSubscription\"]"
        _links:
          self:
            href: "[\"/mecAppSuptApi/example\"]"
        callbackReference: callbackReference
    CurrentTime:
      title: CurrentTime
      required:
      - nanoSeconds
      - seconds
      - timeSourceStatus
      type: object
      properties:
        seconds:
          type: integer
          description: "The seconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC"
        nanoSeconds:
          type: integer
          description: "The nanoseconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC"
        timeSourceStatus:
          $ref: '#/components/schemas/TimeSourceStatus'
      description: This type represents the information provided by the MEC platform
        in response to the Get Platform Time Request message.
      example:
        seconds: 0
        nanoSeconds: 6
        timeSourceStatus: "[\"TRACEABLE\"]"
    DestinationInterfaceInterfaceType:
      title: DestinationInterfaceInterfaceType
      type: string
      description: Type of the interface
      example: "[\"TUNNEL\"]"
      enum:
      - TUNNEL
      - MAC
      - IP
    DestinationInterface:
      title: DestinationInterface
      required:
      - interfaceType
      type: object
      properties:
        interfaceType:
          $ref: '#/components/schemas/DestinationInterfaceInterfaceType'
        tunnelInfo:
          $ref: '#/components/schemas/TunnelInfo'
        srcMacAddress:
          type: string
          description: Source address identifies the MAC address of the interface
          example: "[\"02-00-00-00-00-00\"]"
        dstMacAddress:
          type: string
          description: Source address identifies the MAC address of the interface
          example: "[\"02-00-00-00-00-00\"]"
        dstIpAddress:
          type: string
          description: IP address of the remote destination
          example: "[\"192.0.2.0\"]"
      description: "This type represents the destination interface. If the action\
        \ is FORWARD_DECAPSULATED, FORWARD_ENCAPSULATED or PASSTHROUGH one value shall\
        \ be provided. If the action is DUPLICATE_DECAPSULATED or DUPLICATE_ENCAPSULATED,\
        \ two values shall be provided. If the action is DROP, no value shall be provided."
      example:
        interfaceType: "[\"TUNNEL\"]"
        dstIpAddress: "[\"192.0.2.0\"]"
        srcMacAddress: "[\"02-00-00-00-00-00\"]"
        tunnelInfo:
          tunnelSrcAddress: "[\"?\"]"
          tunnelType: "[\"GTP_U\"]"
          tunnelDstAddress: "[\"?\"]"
        dstMacAddress: "[\"02-00-00-00-00-00\"]"
    DnsRuleIpAddressType:
      title: DnsRuleIpAddressType
      type: string
      description: IP address type
      example: "[\"IP_V6\"]"
      enum:
      - IP_V6
      - IP_V4
    DnsRuleState:
      title: DnsRuleState
      type: string
      description: DNS rule state. This attribute may be updated using HTTP PUT method
      example: "[\"ACTIVE\"]"
      enum:
      - ACTIVE
      - INACTIVE
    DnsRule:
      title: DnsRule
      required:
      - dnsRuleId
      - domainName
      - ipAddress
      - ipAddressType
      - state
      type: object
      properties:
        dnsRuleId:
          type: string
          description: Identifies the DNS Rule
          example: "[\"dnsRule1\"]"
        domainName:
          type: string
          description: FQDN resolved by the DNS rule
          example: "[\"www.example.com\"]"
        ipAddressType:
          $ref: '#/components/schemas/DnsRuleIpAddressType'
        ipAddress:
          type: string
          description: IP address associated with the FQDN resolved by the DNS rule
          example: "[\"192.0.2.0\"]"
        ttl:
          type: integer
          description: Time to live value
        state:
          $ref: '#/components/schemas/DnsRuleState'
      description: This type represents the general information of a DNS rule.
      example:
        domainName: "[\"www.example.com\"]"
        ipAddress: "[\"192.0.2.0\"]"
        dnsRuleId: "[\"dnsRule1\"]"
        state: "[\"ACTIVE\"]"
        ttl: 0
        ipAddressType: "[\"IP_V6\"]"
    LinkType:
      title: LinkType
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
          example: "[\"/mecAppSuptApi/example\"]"
      description: This type represents a type of link and may be referenced from
        data structures
      example:
        href: "[\"/mecAppSuptApi/example\"]"
    LinkTypeConfirmTermination:
      title: LinkTypeConfirmTermination
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
          example: "[\"/mecAppSuptApi/example\"]"
      description: Link to the task resource where to confirm termination in case
        the  application is ready to be terminated before expiry of the timeout.
    MecAppSuptApiSubscriptionLinkListLinks:
      title: MecAppSuptApiSubscriptionLinkListLinks
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
        subscriptions:
          type: array
          description: The MEC application instance's subscriptions
          items:
            $ref: '#/components/schemas/MecAppSuptApiSubscriptionLinkListSubscription'
      description: Self-referring URI.
      example:
        subscriptions:
        - rel: rel
          href: "[\"/mecAppSuptApi/example\"]"
        - rel: rel
          href: "[\"/mecAppSuptApi/example\"]"
        self:
          href: "[\"/mecAppSuptApi/example\"]"
    MecAppSuptApiSubscriptionLinkListSubscription:
      title: MecAppSuptApiSubscriptionLinkListSubscription
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
          example: "[\"/mecAppSuptApi/example\"]"
        rel:
          type: string
          description: The values shall be set to AppTerminationNotificationSubscription.
      description: A link to a subscription.
      example:
        rel: rel
        href: "[\"/mecAppSuptApi/example\"]"
    MecAppSuptApiSubscriptionLinkList:
      title: MecAppSuptApiSubscriptionLinkList
      required:
      - _links
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/MecAppSuptApiSubscriptionLinkListLinks'
      description: This type represents a list of links related to currently existing
        subscriptions for a MEC application instance. This information is returned
        when sending a request to receive current subscriptions.
      example:
        _links:
          subscriptions:
          - rel: rel
            href: "[\"/mecAppSuptApi/example\"]"
          - rel: rel
            href: "[\"/mecAppSuptApi/example\"]"
          self:
            href: "[\"/mecAppSuptApi/example\"]"
    OperationActionType:
      title: OperationActionType
      type: string
      description: Operation that is being performed on the MEC application instance.
      example: "[\"TERMINATING\"]"
      enum:
      - STOPPING
      - TERMINATING
    ProblemDetails:
      title: ProblemDetails
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
        title:
          type: string
          description: "A short, human-readable summary of the problem type"
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem
    Self:
      title: Self
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
      description: Self-referring URI.
      example:
        self:
          href: "[\"/mecAppSuptApi/example\"]"
    TimingCapsNtpServersAuthenticationOption:
      title: TimingCapsNtpServersAuthenticationOption
      type: string
      description: NTP authentication option
      example: "[\"NONE\"]"
      enum:
      - NONE
      - SYMMETRIC_KEY
      - AUTO_KEY
    TimingCapsNtpServersNtpServerAddrType:
      title: TimingCapsNtpServersNtpServerAddrType
      type: string
      description: Address type of NTP server
      example: "[\"IP_ADDRESS\"]"
      enum:
      - IP_ADDRESS
      - DNS_NAME
    TimingCapsNtpServers:
      title: TimingCapsNtpServers
      required:
      - authenticationKeyNum
      - authenticationOption
      - localPriority
      - maxPollingInterval
      - minPollingInterval
      - ntpServerAddr
      - ntpServerAddrType
      type: object
      properties:
        ntpServerAddrType:
          $ref: '#/components/schemas/TimingCapsNtpServersNtpServerAddrType'
        ntpServerAddr:
          type: string
          description: NTP server address
          example: "[\"192.0.2.0\"]"
        minPollingInterval:
          type: integer
          description: "Minimum poll interval for NTP messages, in seconds as a power\
            \ of two. Range 3 to 17"
        maxPollingInterval:
          type: integer
          description: "Maximum poll interval for NTP messages, in seconds as a power\
            \ of two. Range 3 to 17"
        localPriority:
          type: integer
          description: NTP server local priority
        authenticationOption:
          $ref: '#/components/schemas/TimingCapsNtpServersAuthenticationOption'
        authenticationKeyNum:
          type: integer
          description: Authentication key number
      description: NTP server detail.
      example:
        ntpServerAddr: "[\"192.0.2.0\"]"
        maxPollingInterval: 5
        authenticationKeyNum: 2
        localPriority: 5
        authenticationOption: "[\"NONE\"]"
        ntpServerAddrType: "[\"IP_ADDRESS\"]"
        minPollingInterval: 1
    TimingCaps_PtpMasters:
      title: TimingCaps_PtpMasters
      required:
      - delayReqMaxRate
      - ptpMasterIpAddress
      - ptpMasterLocalPriority
      type: object
      properties:
        ptpMasterIpAddress:
          type: string
          description: PTP Server (referred to as "master" in IEEE 1588-2019) IP Address
          example: "[\"192.0.2.0\"]"
        ptpMasterLocalPriority:
          type: integer
          description: PTP Server (referred to as "master" in IEEE 1588-2019 ) local
            priority
        delayReqMaxRate:
          type: integer
          description: Acceptable maximum rate of the Delay_Req messages in packets
            per second
      description: NTP server detail.
      example:
        ptpMasterLocalPriority: 7
        ptpMasterIpAddress: "[\"192.0.2.0\"]"
        delayReqMaxRate: 9
    TimingCapsTimeStamp:
      title: TimingCapsTimeStamp
      required:
      - nanoSeconds
      - seconds
      type: object
      properties:
        seconds:
          type: integer
          description: "The seconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC"
        nanoSeconds:
          type: integer
          description: "The nanoseconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC"
      description: time
      example:
        seconds: 0
        nanoSeconds: 6
    TimingCaps:
      title: TimingCaps
      type: object
      properties:
        timeStamp:
          $ref: '#/components/schemas/TimingCapsTimeStamp'
        ntpServers:
          type: array
          description: Available NTP servers
          items:
            $ref: '#/components/schemas/TimingCapsNtpServers'
        ptpMasters:
          type: array
          description: Number of available PTP Servers (referred to as "masters" in
            IEEE 1588-2019)
          items:
            $ref: '#/components/schemas/TimingCaps_PtpMasters'
      description: This type represents the information provided by the MEC platform
        in response to the Timing capabilities Query message.
      example:
        timeStamp:
          seconds: 0
          nanoSeconds: 6
        ntpServers:
        - ntpServerAddr: "[\"192.0.2.0\"]"
          maxPollingInterval: 5
          authenticationKeyNum: 2
          localPriority: 5
          authenticationOption: "[\"NONE\"]"
          ntpServerAddrType: "[\"IP_ADDRESS\"]"
          minPollingInterval: 1
        - ntpServerAddr: "[\"192.0.2.0\"]"
          maxPollingInterval: 5
          authenticationKeyNum: 2
          localPriority: 5
          authenticationOption: "[\"NONE\"]"
          ntpServerAddrType: "[\"IP_ADDRESS\"]"
          minPollingInterval: 1
        ptpMasters:
        - ptpMasterLocalPriority: 7
          ptpMasterIpAddress: "[\"192.0.2.0\"]"
          delayReqMaxRate: 9
        - ptpMasterLocalPriority: 7
          ptpMasterIpAddress: "[\"192.0.2.0\"]"
          delayReqMaxRate: 9
    TrafficFilter:
      title: TrafficFilter
      type: object
      properties:
        srcAddress:
          type: array
          description: "An IP address or a range of IP address. For IPv4, the IP address\
            \ could be an IP address plus mask, or an individual IP address, or a\
            \ range of IP addresses. For IPv6, the IP address could be an IP prefix,\
            \ or a range of IP prefixes."
          items:
            type: string
        dstAddress:
          type: array
          description: "An IP address or a range of IP address. For IPv4, the IP address\
            \ could be an IP address plus mask, or an individual IP address, or a\
            \ range of IP addresses. For IPv6, the IP address could be an IP prefix,\
            \ or a range of IP prefixes."
          items:
            type: string
        srcPort:
          type: array
          description: A port or a range of ports
          items:
            type: string
        dstPort:
          type: array
          description: A port or a range of ports
          items:
            type: string
        protocol:
          type: array
          description: Specify the protocol of the traffic filter
          items:
            type: string
        token:
          type: array
          description: Used for token based traffic rule
          items:
            type: string
        srcTunnelAddress:
          type: array
          description: Used for GTP tunnel based traffic rule
          items:
            type: string
        tgtTunnelAddress:
          type: array
          description: Used for GTP tunnel based traffic rule
          items:
            type: string
        srcTunnelPort:
          type: array
          description: Used for GTP tunnel based traffic rule
          items:
            type: string
        dstTunnelPort:
          type: array
          description: Used for GTP tunnel based traffic rule
          items:
            type: string
        qCI:
          type: integer
          description: Used to match all packets that have the same Quality Class
            Indicator (QCI).
        dSCP:
          type: integer
          description: Used to match all IPv4 packets that have the same Differentiated
            Services Code Point (DSCP)
        tC:
          type: integer
          description: Used to match all IPv6 packets that have the same Traffic Class.
      description: This type represents the traffic filter.
      example:
        srcTunnelPort:
        - srcTunnelPort
        - srcTunnelPort
        dstAddress:
        - dstAddress
        - dstAddress
        srcAddress:
        - srcAddress
        - srcAddress
        srcPort:
        - srcPort
        - srcPort
        token:
        - token
        - token
        tC: 5
        protocol:
        - protocol
        - protocol
        dstTunnelPort:
        - dstTunnelPort
        - dstTunnelPort
        dSCP: 1
        dstPort:
        - dstPort
        - dstPort
        qCI: 6
        srcTunnelAddress:
        - srcTunnelAddress
        - srcTunnelAddress
        tgtTunnelAddress:
        - tgtTunnelAddress
        - tgtTunnelAddress
    TrafficRuleAction:
      title: TrafficRuleAction
      type: string
      description: The action of the MEC host data plane when a packet matches the
        trafficFilter
      example: "[\"DROP\"]"
      enum:
      - DROP
      - FORWARD_DECAPSULATED
      - FORWARD_ENCAPSULATED
      - PASSTHROUGH
      - DUPLICATE_DECAPSULATED
      - DUPLICATE_ENCAPSULATED
    TrafficRuleFilterType:
      title: TrafficRuleFilterType
      type: string
      description: Definition of filter per FLOW or PACKET. If flow the filter match
        UE->EPC packet and the reverse packet is handled in the same context
      example: "[\"FLOW\"]"
      enum:
      - FLOW
      - PACKET
    TrafficRuleState:
      title: TrafficRuleState
      type: string
      description: Contains the traffic rule state. This attribute may be updated
        using HTTP PUT method
      example: "[\"ACTIVE\"]"
      enum:
      - ACTIVE
      - INACTIVE
    TrafficRule:
      title: TrafficRule
      required:
      - action
      - filterType
      - priority
      - state
      - trafficFilter
      - trafficRuleId
      type: object
      properties:
        trafficRuleId:
          type: string
          description: Identify the traffic rule.
          example: "[\"TrafficRule1\"]"
        filterType:
          $ref: '#/components/schemas/TrafficRuleFilterType'
        priority:
          type: integer
          description: "Priority of this traffic rule within the range 0 to 255. If\
            \ traffic rules conflict, the one with higher priority take precedence.\
            \ Value indicates the priority in descending order, i.e. with 0 as the\
            \ highest priority and 255 as the lowest priority."
        trafficFilter:
          type: array
          items:
            $ref: '#/components/schemas/TrafficFilter'
        action:
          $ref: '#/components/schemas/TrafficRuleAction'
        dstInterface:
          maxItems: 2
          type: array
          items:
            $ref: '#/components/schemas/DestinationInterface'
        state:
          $ref: '#/components/schemas/TrafficRuleState'
      description: This type represents the general information of a traffic rule.
      example:
        action: "[\"DROP\"]"
        trafficRuleId: "[\"TrafficRule1\"]"
        dstInterface:
        - interfaceType: "[\"TUNNEL\"]"
          dstIpAddress: "[\"192.0.2.0\"]"
          srcMacAddress: "[\"02-00-00-00-00-00\"]"
          tunnelInfo:
            tunnelSrcAddress: "[\"?\"]"
            tunnelType: "[\"GTP_U\"]"
            tunnelDstAddress: "[\"?\"]"
          dstMacAddress: "[\"02-00-00-00-00-00\"]"
        - interfaceType: "[\"TUNNEL\"]"
          dstIpAddress: "[\"192.0.2.0\"]"
          srcMacAddress: "[\"02-00-00-00-00-00\"]"
          tunnelInfo:
            tunnelSrcAddress: "[\"?\"]"
            tunnelType: "[\"GTP_U\"]"
            tunnelDstAddress: "[\"?\"]"
          dstMacAddress: "[\"02-00-00-00-00-00\"]"
        state: "[\"ACTIVE\"]"
        filterType: "[\"FLOW\"]"
        priority: 0
        trafficFilter:
        - srcTunnelPort:
          - srcTunnelPort
          - srcTunnelPort
          dstAddress:
          - dstAddress
          - dstAddress
          srcAddress:
          - srcAddress
          - srcAddress
          srcPort:
          - srcPort
          - srcPort
          token:
          - token
          - token
          tC: 5
          protocol:
          - protocol
          - protocol
          dstTunnelPort:
          - dstTunnelPort
          - dstTunnelPort
          dSCP: 1
          dstPort:
          - dstPort
          - dstPort
          qCI: 6
          srcTunnelAddress:
          - srcTunnelAddress
          - srcTunnelAddress
          tgtTunnelAddress:
          - tgtTunnelAddress
          - tgtTunnelAddress
        - srcTunnelPort:
          - srcTunnelPort
          - srcTunnelPort
          dstAddress:
          - dstAddress
          - dstAddress
          srcAddress:
          - srcAddress
          - srcAddress
          srcPort:
          - srcPort
          - srcPort
          token:
          - token
          - token
          tC: 5
          protocol:
          - protocol
          - protocol
          dstTunnelPort:
          - dstTunnelPort
          - dstTunnelPort
          dSCP: 1
          dstPort:
          - dstPort
          - dstPort
          qCI: 6
          srcTunnelAddress:
          - srcTunnelAddress
          - srcTunnelAddress
          tgtTunnelAddress:
          - tgtTunnelAddress
          - tgtTunnelAddress
    TunnelInfoTunnelType:
      title: TunnelInfoTunnelType
      type: string
      description: This type represents the tunnel information.
      example: "[\"GTP_U\"]"
      enum:
      - GTP_U
      - GRE
    TunnelInfo:
      title: TunnelInfo
      required:
      - tunnelType
      type: object
      properties:
        tunnelType:
          $ref: '#/components/schemas/TunnelInfoTunnelType'
        tunnelDstAddress:
          type: string
          description: Destination address of the tunnel
          example: "[\"?\"]"
        tunnelSrcAddress:
          type: string
          description: Source address of the tunnel
          example: "[\"?\"]"
      description: This type represents the tunnel information.
      example:
        tunnelSrcAddress: "[\"?\"]"
        tunnelType: "[\"GTP_U\"]"
        tunnelDstAddress: "[\"?\"]"
    TimeSourceStatus:
      title: TimeSourceStatus
      type: string
      description: Platform Time Source status. 1 = TRACEABLE - time source is locked
        to the UTC time source. 2 = NONTRACEABLE - time source is not locked to the
        UTC time source
      example: "[\"TRACEABLE\"]"
      enum:
      - TRACEABLE
      - NONTRACEABLE
  requestBodies:
    AppTerminationNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppTerminationNotification'
      required: true
