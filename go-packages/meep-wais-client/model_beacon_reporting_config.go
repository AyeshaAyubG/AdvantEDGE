/*
 * Copyright (c) 2020  InterDigital Communications, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the \"License\");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * AdvantEDGE WLAN Access Information API
 *
 * WLAN Access Information Service is AdvantEDGE's implementation of [ETSI MEC ISG MEC028 WAI API](http://www.etsi.org/deliver/etsi_gs/MEC/001_099/028/02.02.01_60/gs_MEC028v020201p.pdf) <p>[Copyright (c) ETSI 2020](https://forge.etsi.org/etsi-forge-copyright-notice.txt) <p>**Micro-service**<br>[meep-wais](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-wais) <p>**Type & Usage**<br>Edge Service used by edge applications that want to get information about WLAN access information in the network <p>**Note**<br>AdvantEDGE supports a selected subset of WAI API subscription types. <p>Supported subscriptions: <p> - AssocStaSubscription <p> - StaDataRateSubscription
 *
 * API version: 2.2.1
 * Contact: AdvantEDGE@InterDigital.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package client

type BeaconReportingConfig struct {
	// Reporting condition for the Beacon Report as per Table 9-89 of IEEE 802.11-2016 0 = Report to be issued after each measurement 1 = measured RCPI level is greater than the threshold 2 = measured RCPI level is less than the threshold 3 = measured RSNI level is greater than the threshold 4 = measured RSNI level is less than the threshold 5 = measured RCPI level is greater than a threshold defined by an offset from the serving AP’s reference RCPI 6 = measured RCPI level is less than a threshold defined by an offset from the serving AP’s reference RCPI 7 = measured RSNI level is greater than a threshold defined by an offset from the serving AP’s reference RSNI 8 = measured RSNI level is less than a threshold defined by an offset from the serving AP’s reference RSNI 9 = measured RCPI level is in a range bound by the serving AP’s reference RCPI and an offset from the serving AP’s reference RCPI 10 = measured RSNI level is in a range bound by the serving AP’s reference RSNI and an offset from the serving AP’s reference RSNI
	ReportingCondition int32 `json:"reportingCondition"`
	// The threshold subfield contains either the threshold value or the offset value to be used for conditional reporting.   For reportingCondition subfield with values 1 and 2, the threshold value is a logarithmic function of the received signal power, as defined 9.4.2.38 of IEEE 802.11-2016.   For reportingCondition subfield values 3 and 4, the threshold value is a logarithmic function of the signal-to-noise ratio, as described in 9.4.2.41 of IEEE 802.11-2016.   For reportingCondition subfield values 5 to 10, the offset value is an 8-bit 2s complement integer in units of 0.5 dBm. The indicated reporting condition applies individually to each measured Beacon, Measurement Pilot, or Probe Response frame.
	Threshold int32 `json:"threshold"`
}
