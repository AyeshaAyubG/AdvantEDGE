/*
 * Copyright (c) 2020  InterDigital Communications, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the \"License\");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * AdvantEDGE MEC Service Management API
 * MEC Service Management Service is AdvantEDGE's implementation of [ETSI MEC ISG MEC011 Application Enablement API](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf) <p>[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt) <p>**Micro-service**<br>[meep-app-enablement](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-app-enablement/server/service-mgmt) <p>**Type & Usage**<br>Edge Service used by edge applications that want to get information about services in the network <p>**Note**<br>AdvantEDGE supports all of Service Management API endpoints (see below).
 *
 * OpenAPI spec version: 2.1.1
 * Contact: AdvantEDGE@InterDigital.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdvantEdgeMecServiceManagementApi);
  }
}(this, function(expect, AdvantEdgeMecServiceManagementApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LocalityType', function() {
      beforeEach(function() {
        instance = AdvantEdgeMecServiceManagementApi.LocalityType;
      });

      it('should create an instance of LocalityType', function() {
        // TODO: update the code to test LocalityType
        expect(instance).to.be.a('object');
      });

      it('should have the property MEC_SYSTEM', function() {
        expect(instance).to.have.property('MEC_SYSTEM');
        expect(instance.MEC_SYSTEM).to.be(&quot;MEC_SYSTEM&quot;);
      });

      it('should have the property MEC_HOST', function() {
        expect(instance).to.have.property('MEC_HOST');
        expect(instance.MEC_HOST).to.be(&quot;MEC_HOST&quot;);
      });

      it('should have the property NFVI_POP', function() {
        expect(instance).to.have.property('NFVI_POP');
        expect(instance.NFVI_POP).to.be(&quot;NFVI_POP&quot;);
      });

      it('should have the property ZONE', function() {
        expect(instance).to.have.property('ZONE');
        expect(instance.ZONE).to.be(&quot;ZONE&quot;);
      });

      it('should have the property ZONE_GROUP', function() {
        expect(instance).to.have.property('ZONE_GROUP');
        expect(instance.ZONE_GROUP).to.be(&quot;ZONE_GROUP&quot;);
      });

      it('should have the property NFVI_NODE', function() {
        expect(instance).to.have.property('NFVI_NODE');
        expect(instance.NFVI_NODE).to.be(&quot;NFVI_NODE&quot;);
      });

    });
  });

}));
