/*
 * Copyright (c) 2022  The AdvantEDGE Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * AdvantEDGE Metrics Service REST API
 * Metrics Service provides metrics about the active scenario <p>**Micro-service**<br>[meep-metrics-engine](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-metrics-engine) <p>**Type & Usage**<br>Platform Service used by control/monitoring software and possibly by edge applications that require metrics <p>**Details**<br>API details available at _your-AdvantEDGE-ip-address/api_
 *
 * OpenAPI spec version: 1.0.0
 * Contact: AdvantEDGE@InterDigital.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdvantEdgeMetricsServiceRestApi);
  }
}(this, function(expect, AdvantEdgeMetricsServiceRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('NetworkMetric', function() {
      beforeEach(function() {
        instance = new AdvantEdgeMetricsServiceRestApi.NetworkMetric();
      });

      it('should create an instance of NetworkMetric', function() {
        // TODO: update the code to test NetworkMetric
        expect(instance).to.be.a(AdvantEdgeMetricsServiceRestApi.NetworkMetric);
      });

      it('should have the property time (base name: "time")', function() {
        // TODO: update the code to test the property time
        expect(instance).to.have.property('time');
        // expect(instance.time).to.be(expectedValueLiteral);
      });

      it('should have the property lat (base name: "lat")', function() {
        // TODO: update the code to test the property lat
        expect(instance).to.have.property('lat');
        // expect(instance.lat).to.be(expectedValueLiteral);
      });

      it('should have the property ul (base name: "ul")', function() {
        // TODO: update the code to test the property ul
        expect(instance).to.have.property('ul');
        // expect(instance.ul).to.be(expectedValueLiteral);
      });

      it('should have the property dl (base name: "dl")', function() {
        // TODO: update the code to test the property dl
        expect(instance).to.have.property('dl');
        // expect(instance.dl).to.be(expectedValueLiteral);
      });

      it('should have the property ulos (base name: "ulos")', function() {
        // TODO: update the code to test the property ulos
        expect(instance).to.have.property('ulos');
        // expect(instance.ulos).to.be(expectedValueLiteral);
      });

      it('should have the property dlos (base name: "dlos")', function() {
        // TODO: update the code to test the property dlos
        expect(instance).to.have.property('dlos');
        // expect(instance.dlos).to.be(expectedValueLiteral);
      });

    });
  });

}));
