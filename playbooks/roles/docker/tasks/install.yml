---

- name: Install aptitude using apt
  apt:
    name: aptitude
    state: latest
    update_cache: yes
    force_apt_get: yes

- name: Install required system packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - software-properties-common
    - python3-pip
    - virtualenv
    - python3-setuptools

- name: Add Docker APT GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ubuntu_release }} stable
    state: present

- name: Install docker engine
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: present
  with_items:
    - docker-ce={{ docker_version }}*
    - docker-ce-cli={{ docker_version }}*
    - containerd.io={{ containerd_version }}
    - docker-compose-plugin

- name: Hold docker version
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-compose-plugin

- name: Verify docker group is present
  group:
    name: docker
    state: present

- name: Add user to docker group
  user:
    name: '{{ ansible_user }}'
    append: yes
    groups: docker

- name: Allow {{ ansible_user }} to access containerd socket
  acl:
    path: /run/containerd/containerd.sock
    etype: user
    entity: '{{ ansible_user }}'
    permissions: rw

- name: Set dockerd config
  copy:
    src: "daemon.json"
    dest: /etc/docker/
    owner: root
    group: root
    mode: 0644

- name: dockerd service
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Enable and check Docker service
  systemd:
    name: docker
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_docker
