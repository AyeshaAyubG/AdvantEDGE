openapi: 3.0.0
info:
  title: AdvantEDGE Application Mobility API
  version: '2.2.1'
  description: Application Mobility Service is AdvantEDGE's implementation of [ETSI
    MEC ISG MEC021 Application Mobility API](http://www.etsi.org/deliver/etsi_gs/MEC/001_099/021/02.02.01_60/gs_MEC021v020201p.pdf)
    <p>[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)
    <p>**Micro-service**<br>[meep-ams](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-ams)
    <p>**Type & Usage**<br>Edge Service used by edge applications that want to get
    information about application mobility in the network <p>**Note**<br>AdvantEDGE
    supports a selected subset of Application Mobility API endpoints (see below).
  license:
    name: Apache 2.0
    url: 'https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE'
  contact:
    name: InterDigital AdvantEDGE Support
    email: AdvantEDGE@InterDigital.com
externalDocs:
  description: ETSI GS MEC 021 Application Mobility Service API, v2.2.1
  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/021/02.02.01_60/gs_mec021v020201p.pdf
servers:
- url: https://localhost/amsi/v1
  variables: {}
tags:
  - name: amsi
  - name: unsupported
paths:
  /queries/adjacent_app_instances:
    get:
      tags:
      - unsupported
      summary: 'Retrieve information about this subscription.'
      description: Retrieve information about this subscription.
      operationId: adj_app_instGET
      parameters:
      - name: filter
        in: query
        description: Attribute-based filtering parameters according to ETSI GS MEC 009
        style: form
        explode: true
        schema:
          type: string
      - name: all_fields
        in: query
        description: Include all complex attributes in the response.
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Complex attributes to be included into the response. See clause 6.18 in ETSI GS MEC 009
        style: form
        explode: true
        schema:
          type: string
      - name: exclude_fields
        in: query
        description: Complex attributes to be excluded from the response.See clause 6.18 in ETSI GS MEC 009
        style: form
        explode: true
        schema:
          type: string
      - name: exclude_default
        in: query
        description: Indicates to exclude the following complex attributes from the response  See clause 6.18 in ETSI GS MEC 011 for details.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: A response body containing  zero or more adjacent application instances
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdjacentAppInstanceInfo'
                description: ''
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []
  /app_mobility_services:
    get:
      tags:
      - amsi
      summary: 'Retrieve information about the registered application mobility service.'
      description: ' Retrieve information about the registered application mobility service.'
      operationId: app_mobility_serviceGET
      parameters:
      - name: filter
        in: query
        description: Attribute-based filtering parameters according to ETSI GS MEC 011
        style: form
        explode: true
        schema:
          type: string
      - name: all_fields
        in: query
        description: Include all complex attributes in the response.
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Complex attributes to be included into the response. See clause 6.18 in ETSI GS MEC 011
        style: form
        explode: true
        schema:
          type: string
      - name: exclude_fields
        in: query
        description: Complex attributes to be excluded from the response.See clause 6.18 in ETSI GS MEC 011
        style: form
        explode: true
        schema:
          type: string
      - name: exclude_default
        in: query
        description: Indicates to exclude the following complex attributes from the response  See clause 6.18 in ETSI GS MEC 011 for details.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Contains in an array the representations of zero or more application mobility services.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistrationInfo'
                description: ''
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    post:
      tags:
      - amsi
      summary: 'Create a new application mobility service for the service requester.'
      description: Create a new application mobility service for the service requester.
      operationId: app_mobility_servicePOST
      parameters: []
      requestBody:
        description: Application mobility service to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInfo'
        required: true
      responses:
        '201':
          description: Successful response for application mobility service creation
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationInfo'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []
  /app_mobility_services/{appMobilityServiceId}:
    get:
      tags:
      - amsi
      summary: 'Retrieve information about this individual application mobility service'
      description: Retrieve information about this individual application mobility service
      operationId: app_mobility_service_by_idGET
      parameters:
      - name: appMobilityServiceId
        in: path
        description: It uniquely identifies the created individual application mobility service
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Contains a representation of the application mobility service.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationInfo'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    put:
      tags:
      - amsi
      summary: ' update the existing individual application mobility service'
      description: ' update the existing individual application mobility service'
      operationId: app_mobility_service_by_idPUT
      parameters:
      - name: appMobilityServiceId
        in: path
        description: It uniquely identifies the created individual application mobility service
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInfo'
        required: true
      responses:
        '200':
          description: Contains a data type describing the updated application mobility service.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationInfo'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: 'Precondition failed :  used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts when using PUT'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '422':
          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    delete:
      tags:
      - amsi
      summary: ' deregister the individual application mobility service'
      description: ' deregister the individual application mobility service'
      operationId: app_mobility_service_by_idDELETE
      parameters:
      - name: appMobilityServiceId
        in: path
        description: It uniquely identifies the created individual application mobility service
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []
  /app_mobility_services/{appMobilityServiceId}/deregister_task:
    post:
      tags:
      - unsupported
      summary: ' deregister the individual application mobility service'
      description: ' deregister the individual application mobility service'
      operationId: app_mobility_service_derPOST
      parameters:
      - name: appMobilityServiceId
        in: path
        description: It uniquely identifies the created individual application mobility service
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []
  /subscriptions:
    get:
      tags:
      - amsi
      summary: 'Retrieve information about the subscriptions for this requestor.'
      description: Retrieve information about the subscriptions for this requestor.
      operationId: subGET
      parameters:
      - name: subscriptionType
        in: query
        description: 'Query parameter to filter on a specific subscription type. Permitted values: mobility_proc or adj_app_info'
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Contains  the list of links to requestor subscriptions.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionLinkList'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    post:
      tags:
      - amsi
      summary: 'Create a new subscription to Application Mobility Service notifications.'
      description: Create a new subscription to Application Mobility Service notifications.
      operationId: subPOST
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineSubscription'
        required: true
      responses:
        '201':
          description: Created subscription is described using the appropriate data type
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineSubscription'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '415':
          description: 'Unsupported Media Type :  used to indicate that the server or the client does not support the content type of the entity body.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '422':
          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []
  /subscriptions/{subscriptionId}:
    get:
      tags:
      - amsi
      summary: 'Retrieve information about this subscription.'
      description: Retrieve information about this subscription.
      operationId: sub_byIdGET
      parameters:
      - name: subscriptionId
        in: path
        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: A response body containing data type describing the specific RNI event subscription
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineSubscription'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    put:
      tags:
      - amsi
      summary: 'update the existing individual subscription.'
      description: update the existing individual subscription.
      operationId: sub_byIdPUT
      parameters:
      - name: subscriptionId
        in: path
        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineSubscription'
        required: true
      responses:
        '200':
          description: a response body containing data type describing the updated subscription
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineSubscription'
        '400':
          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '412':
          description: 'Precondition failed :  used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts when using PUT'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '422':
          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    delete:
      tags:
      - amsi
      summary: 'cancel the existing individual subscription'
      description: cancel the existing individual subscription
      operationId: sub_byIdDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: No Content
          headers: {}
          content: {}
        '401':
          description: 'Unauthorized :  used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: 'Forbidden :  operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: 'Too Many Requests : used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: false
    parameters: []

  /uri_provided_by_subscriber:
    post:
      tags:
      - unsupported
      summary: delivers a notification from the AMS resource to the subscriber
      description: delivers a notification from the AMS resource to the subscriber
      operationId: notificationPOST
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineNotification'
        required: true
      responses:
        '204':
          description: The notification was delivered successfully. The response body shall be empty.
          headers: {}
          content: {}
        '401':
          description: It is used when the client did not submit credentials.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: operation is not allowed given the current status of the resource.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Used when a client provided a URI that cannot be mapped to a valid resource URI.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '406':
          description: Used to indicate that the server cannot provide the any of the content formats supported by the client.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '429':
          description: Used when a rate limiter has triggered.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /notifications/mec011/appTermination:
    post:
      tags:
      - amsi
      summary: 'MEC011 Application Termination notification for self termination'
      description: 'Terminates itself.'
      operationId: mec011AppTerminationPOST
      requestBody:
        description: 'Termination notification details'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppTerminationNotification'
            example:
                notificationType: 'AppTerminationNotification'
                operationAction: 'TERMINATING'
                maxGracefulTimeout: 10
                links:
                  subscription:
                    href: 'http://mec011Server.example.com/mec_app_support/v1/applications/appId1234/subscriptions/sub123'
                  confirmTermination:
                    href: 'http://mec011Server.example.com/mec_app_support/v1/confirm_termination'
      responses:
        '204':
          description: No Content
      x-swagger-router-controller: 'notifications'

components:
  schemas:
    AdjacentAppInfoSubscriptionLinks:
      title: AdjacentAppInfoSubscriptionLinks
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
      description: Hyperlink related to the resource. This shall be only included in the HTTP responses and in HTTP PUT requests.
    AdjacentAppInfoSubscriptionFilterCriteria:
      title: AdjacentAppInfoSubscriptionFilterCriteria
      type: object
      properties:
        appInstanceId:
          type: string
      description: List of filtering criteria for the subscription. Any filtering criteria from below, which is included in the request, shall also be included in the response.
    AdjacentAppInfoSubscription:
      title: AdjacentAppInfoSubscription
      required:
      - callbackReference
      - filterCriteria
      - subscriptionType
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/AdjacentAppInfoSubscriptionLinks'
        callbackReference:
          type: string
          format: uri
          description: URI selected by the service consumer to receive notifications on the subscribed Application Mobility Service. This shall be included both in the request and in response.
        requestTestNotification:
          type: boolean
          description: Shall be set to TRUE by the service consumer to request a test notification via HTTP on the callbackReference URI, specified in ETSI GS MEC 009, as described in clause 6.12a.
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
        expiryDeadline:
          description: Identifies a boundary after which the subscription will expire.
          $ref: '#/components/schemas/TimeStamp'
        filterCriteria:
          $ref: '#/components/schemas/AdjacentAppInfoSubscriptionFilterCriteria'
        subscriptionType:
          $ref: '#/components/schemas/SubscriptionType'
          description: Shall be set to "AdjacentAppInfoSubscription".
          example:
          - AdjacentAppInfoSubscription
    AdjacentAppInstanceInfo:
      title: AdjacentAppInstanceInfo
      required:
      - appDId
      - appInstanceCommLink
      - appInstanceId
      type: object
      properties:
        appDId:
          type: string
          description: Identifier of the application descriptor.
        appInstanceCommLink:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationInterface'
          description: It specifies the communication interface of application instance.
        appInstanceId:
          type: string
          description: Identifier of the application instance.
        mecHostInformation:
          $ref: '#/components/schemas/MECHostInformation'
        registeredInstanceId:
          type: string
          description: dentifier of the application instance that registers to the AMS, which is instantiated from the application descriptor identified by the attribute "appDId".
    AppMobilityServiceLevel:
      title: AppMobilityServiceLevel
      enum:
      - APP_MOBILITY_NOT_ALLOWED
      - APP_MOBILITY_WITH_CONFIRMATION
      - APP_MOBILITY_WITHOUT_CONFIRMATION
      type: string
      description: This attribute provides an option for the application instance (server) to communicate with the application client before relocating this application instance to another MEC host.
      example:
      - APP_MOBILITY_NOT_ALLOWED
    CommunicationInterface.IpAddresses:
      title: CommunicationInterface.IpAddresses
      required:
      - host
      - port
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
    CommunicationInterface:
      title: CommunicationInterface
      type: object
      properties:
        ipAddresses:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationInterface.IpAddresses'
          description: ''
    MobilityProcedureSubscriptionLinks:
      title: MobilityProcedureSubscriptionLinks
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
    MobilityProcedureSubscriptionFilterCriteria:
      title: MobilityProcedureSubscriptionFilterCriteria
      type: object
      properties:
        appInstanceId:
          type: string
          description: Identifier of the application instance that registers the Application Mobility Service.
        associateId:
          type: array
          items:
            $ref: '#/components/schemas/AssociateId'
          description: 0 to N identifiers to associate the information for specific UE(s) and flow(s).
        mobilityStatus:
          type: array
          items:
            $ref: '#/components/schemas/MobilityStatus'
          description: In case mobilityStatus is not included in the subscription request, the default value 1 = INTER_HOST_MOBILITY_TRIGGERED shall be used and included in the response.
      description: List of filtering criteria for the subscription. Any filtering criteria from below, which is included in the request, shall also be included in the response.

    WebsockNotifConfig:
      type: object
      properties:
        websocketUri:
          description: Set by AMS to indicate to the service consumer the Websocket URI to be used for delivering notifications.
          type: string
          format: uri
        requestWebsocketUri:
          type: boolean
          description: Set to true by the service consumer to indicate that Websocket delivery is requested.

    MobilityProcedureSubscription:
      title: MobilityProcedureSubscription
      required:
      - filterCriteria
      - subscriptionType
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/MobilityProcedureSubscriptionLinks'
        callbackReference:
          type: string
          format: uri
          description: URI selected by the service consumer to receive notifications on the subscribed Application Mobility Service. This shall be included both in the request and in response.
        requestTestNotification:
          type: boolean
          description: Shall be set to TRUE by the service consumer to request a test notification via HTTP on the callbackReference URI, specified in ETSI GS MEC 009, as described in clause 6.12a.
        websockNotifConfig:
          description: Provides details to negotiate and signal the use of a Websocket connection between AMS and the service consumer for notifications.
          $ref: '#/components/schemas/WebsockNotifConfig'
        expiryDeadline:
          description: Identifies a boundary after which the subscription will expire.
          $ref: '#/components/schemas/TimeStamp'
        filterCriteria:
          $ref: '#/components/schemas/MobilityProcedureSubscriptionFilterCriteria'
        subscriptionType:
          $ref: '#/components/schemas/SubscriptionType'
          description: Shall be set to "MobilityProcedureSubscription".
          example:
          - MobilityProcedureSubscription
    MobilityProcedureNotification:
      title: MobilityProcedureNotification
      required:
        - notificationType
        - associateId
        - mobilityStatus
        - _links
      properties:
        notificationType:
          type: string
          description: Shall be set to "MobilityProcedureNotification".
        timeStamp:
          description: Date and time of the generation of the notification
          $ref: '#/components/schemas/TimeStamp'
        associateId:
           type: array
           description: 1 to N identifiers to associate the information for specific
           items:
             $ref: '#/components/schemas/AssociateId'
        mobilityStatus:
          description: Indicate the status of the UE mobility. Values are defined as following 1 = INTERHOST_MOVEOUT_TRIGGERED. 2 = INTERHOST_MOVEOUT_COMPLETED. 3 = INTERHOST_MOVEOUT_FAILED. Other values are reserved.
          $ref: '#/components/schemas/MobilityStatus'
        targetAppInfo:
          type: object
          required:
            - appInstanceId
          properties:
            appInstanceId:
              type: string
              description: Identifiers of the target application instance.
            commInterface:
              description: If present, it specifies the communication interface of the application instance.
              $ref: '#/components/schemas/CommunicationInterface'
        _links:
          $ref: '#/components/schemas/Link'
    AdjacentAppInfoNotification:
      title: AdjacentAppInfoNotification
      required:
        - notificationType
        - _links
      properties:
        notificationType:
          type: string
          description: Shall be set to "AdjacentAppInfoNotification".
        timeStamp:
          description: Date and time of the generation of the notification
          $ref: '#/components/schemas/TimeStamp'
        associateId:
           type: array
           description: 1 to N identifiers to associate the information for specific
           items:
             $ref: '#/components/schemas/AssociateId'
        adjacentAppInfo:
          type: object
          items:
            $ref: '#/components/schemas/AdjacentAppInfoNotificationAdjacentAppInfo'
        _links:
          $ref: '#/components/schemas/Link'
    AdjacentAppInfoNotificationAdjacentAppInfo:
      type: object
      required:
        - appInstanceId
        - commInterface
      properties:
        appInstanceId:
          type: string
          description: Identifier of the adjacent application instance.
        commInterface:
          type: array
          description: If present, it represents the communication interface(s) information of the application instance.
          items:
            $ref: '#/components/schemas/CommunicationInterface'

    ExpiryNotification:
      title: ExpiryNotification
      required:
        - notificationType
        - _links
        - expiryDeadline
      properties:
        notificationType:
          type: string
          description: Shall be set to "ExpiryNotification".
        timeStamp:
          description: Date and time of the generation of the notification
          $ref: '#/components/schemas/TimeStamp'
        _links:
          $ref: '#/components/schemas/Link'
        expiryDeadline:
          description: The boundary value setting in the subscription request.
          $ref: '#/components/schemas/TimeStamp'
    TestNotification:
      title: TestNotification
      required:
        - notificationType
        - _links
      properties:
        notificationType:
          type: string
          description: Shall be set to "TestNotification".
        _links:
           type: object
           description: Hyperlink related to the resource.
           required:
             - subscription
           properties:
              subscription:
                description: URI identifying the subscription for the test notification.
                $ref: '#/components/schemas/LinkType'
    MobilityStatus:
      title: MobilityStatus
      enum:
      - INTERHOST_MOVEOUT_TRIGGERED
      - INTERHOST_MOVEOUT_COMPLETED
      - INTERHOST_MOVEOUT_FAILED
      type: string
      description: Indicate the status of the UE mobility
      example:
      - INTERHOST_MOVEOUT_TRIGGERED
    RegistrationInfoDeviceInformation:
      title: RegistrationInfoDeviceInformation
      required:
      - associateId
      type: object
      properties:
        associateId:
          $ref: '#/components/schemas/AssociateId'
        appMobilityServiceLevel:
          $ref: '#/components/schemas/AppMobilityServiceLevel'
        contextTransferState:
          $ref: '#/components/schemas/ContextTransferState'
    RegistrationInfoServiceConsumerId:
      title: RegistrationInfoServiceConsumerId
      type: object
      properties:
        appInstanceId:
          type: string
          description: If present, it represents the identifier of the application instance registering the Application Mobility Service.
        mepId:
          type: string
          description: If present, it represents the identifier of the MEC platform registering the Application Mobility Service.
      description: The identifier of service consumer requesting the application mobility service, i.e. either the application instance ID or the MEC platform ID.
    RegistrationInfo:
      title: RegistrationInfo
      required:
      - serviceConsumerId
      type: object
      properties:
        appMobilityServiceId:
          type: string
          description: The identifier of registered application mobility service. Shall be absent in POST requests, and present otherwise.
        deviceInformation:
          type: array
          items:
            $ref: '#/components/schemas/RegistrationInfoDeviceInformation'
          description: If present, it specifies the device served by the application instance which is registering is registering the Application Mobility Service.
        expiryTime:
          type: integer
          description: If present, it indicates the time of Application Mobility Service expiration from the time of registration accepted.The value "0" means infinite time, i.e. no expiration.The unit of expiry time is one second.
        serviceConsumerId:
          $ref: '#/components/schemas/RegistrationInfoServiceConsumerId'
    SubscriptionLinkListLinks:
      title: SubscriptionLinkListLinks
      description: List of hyperlinks related to the resource.
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
          description: URI of this resource.
        subscription:
          type: array
          description: The service consumer’s subscriptions.
          items:
           $ref: '#/components/schemas/SubscriptionLinkListSubscription'
    SubscriptionLinkListSubscription:
      title: SubscriptionLinkListSubscription
      required:
      - href
      - subscriptionType
      type: object
      properties:
        href:
          type: string
          description: The URI referring to the subscription.
        subscriptionType:
          description:
          $ref: '#/components/schemas/SubscriptionType'
    SubscriptionLinkList:
      title: SubscriptionLinkList
      required:
      - _links
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/SubscriptionLinkListLinks'
          description: Hyperlinks related to the resource.

    ContextTransferState:
      title: ContextTransferState
      enum:
      - NOT_TRANSFERRED
      - USER_CONTEXT_TRANSFER_COMPLETED
      type: string
      description: If present, it represents the state of transferring the user context to another application instance.
      example:
      - NOT_TRANSFERRED
    SubscriptionType:
      title: SubscriptionType
      enum:
      - MobilityProcedureSubscription
      - AdjacentAppInfoSubscription
      type: string
    AssociateId:
      title: AssociateId
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AssociateIdType'
        value:
          type: string
          description: Value for the identifier.
    Link:
      type: object
      description: Object containing hyperlinks related to the resource.
      required:
        - subscription
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
    LinkType:
      title: LinkType
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: The URI referring to the subscription.
      description: "'This data type represents a type of link'"
    TimeStamp:
      title: TimeStamp
      required:
      - seconds
      - nanoSeconds
      type: object
      properties:
        seconds:
          type: integer
          description: "'The seconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.'"
        nanoSeconds:
          type: integer
          description: "'The nanoseconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.'"
      description: "'This data type represents the time stamp as Unix-time since January 1, 1970, 00:00:00 UTC'"

    KeyValuePairs:
      type: object
      additionalProperties:
          type: object

    MECHostInformation:
      title: MECHostInformation
      required:
      - hostId
      type: object
      properties:
        hostName:
          type: string
          description: Human-readable name of MEC host.
        hostId:
          description: "'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'"
          $ref: '#/components/schemas/KeyValuePairs'


    ProblemDetails:
      title: ProblemDetails
      type: object
      properties:
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem
        title:
          type: string
          description: A short, human-readable summary of the problem type
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 that identifies the problem type
    AssociateIdType:
      title: Type
      enum:
      - UE_IPv4_ADDRESS
      - UE_IPV6_ADDRESS
      - NATED_IP_ADDRESS
      - GTP_TEID
      type: string
      description: Numeric value (0-255) corresponding to specified type of identifier
      example:
      - UE_IPv4_ADDRESS

    AppTerminationNotification:
      required:
      - _links
      - maxGracefulTimeout
      - notificationType
      - operationAction
      type: object
      properties:
        notificationType:
          type: string
          description: Shall be set to AppTerminationNotification.
        operationAction:
          $ref: '#/components/schemas/OperationActionType'
        maxGracefulTimeout:
          type: integer
          description: Maximum timeout value in seconds for graceful termination or
            graceful stop of an application instance.
          format: uint32
        _links:
          $ref: '#/components/schemas/AppTerminationNotification__links'
      description: This type represents the information that the MEC platform notifies
        the subscribed application instance about  the corresponding application instance
        termination/stop.
    OperationActionType:
      description: Operation that is being performed on the MEC application instance.
      type: string
      enum:
        - STOPPING
        - TERMINATING
    AppTerminationNotification__links:
      required:
      - subscription
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
        confirmTermination:
          $ref: '#/components/schemas/LinkType'
    InlineSubscription:
      oneOf:
        - $ref: '#/components/schemas/MobilityProcedureSubscription'
        - $ref: '#/components/schemas/AdjacentAppInfoSubscription'
      discriminator:
          propertyName: subscriptionType
    InlineNotification:
      oneOf:
        - $ref: '#/components/schemas/MobilityProcedureNotification'
        - $ref: '#/components/schemas/AdjacentAppInfoNotification'
        - $ref: '#/components/schemas/ExpiryNotification'
      discriminator:
        propertyName: notificationType
