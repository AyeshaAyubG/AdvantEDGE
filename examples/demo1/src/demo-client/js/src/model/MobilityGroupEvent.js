/*
 * Copyright (c) 2022  The AdvantEDGE Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * MEEP Demo App API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MobilityGroupAppState'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MobilityGroupAppState'));
  } else {
    // Browser globals (root is window)
    if (!root.MeepDemoAppApi) {
      root.MeepDemoAppApi = {};
    }
    root.MeepDemoAppApi.MobilityGroupEvent = factory(root.MeepDemoAppApi.ApiClient, root.MeepDemoAppApi.MobilityGroupAppState);
  }
}(this, function(ApiClient, MobilityGroupAppState) {
  'use strict';

  /**
   * The MobilityGroupEvent model module.
   * @module model/MobilityGroupEvent
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>MobilityGroupEvent</code>.
   * Event object
   * @alias module:model/MobilityGroupEvent
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>MobilityGroupEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MobilityGroupEvent} obj Optional instance to populate.
   * @return {module:model/MobilityGroupEvent} The populated <code>MobilityGroupEvent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('ueId'))
        obj.ueId = ApiClient.convertToType(data['ueId'], 'String');
      if (data.hasOwnProperty('appState'))
        obj.appState = MobilityGroupAppState.constructFromObject(data['appState']);
    }
    return obj;
  }

  /**
   * Mobility Group event name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Mobility Group event type
   * @member {module:model/MobilityGroupEvent.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * Mobility Group UE identifier
   * @member {String} ueId
   */
  exports.prototype.ueId = undefined;

  /**
   * @member {module:model/MobilityGroupAppState} appState
   */
  exports.prototype.appState = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "STATE-UPDATE"
     * @const
     */
    UPDATE: "STATE-UPDATE",

    /**
     * value: "STATE-TRANSFER-START"
     * @const
     */
    TRANSFER_START: "STATE-TRANSFER-START",

    /**
     * value: "STATE-TRANSFER-COMPLETE"
     * @const
     */
    TRANSFER_COMPLETE: "STATE-TRANSFER-COMPLETE",

    /**
     * value: "STATE-TRANSFER-CANCEL"
     * @const
     */
    TRANSFER_CANCEL: "STATE-TRANSFER-CANCEL"
  };

  return exports;

}));
