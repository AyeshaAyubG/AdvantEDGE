# Copyright (c) 2020  InterDigital Communications, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Service API & File Server Access Permissions
# 
# Each service provides route-specific access authorization mode & role permissions:
# - Route name uniquely identifies http router paths
#   -> NOTE: route names are case-insensitive
# - 'mode' is the access authorization mode
#   -> allow: grant access 
#   -> block: deny access
#   -> verify: obtain session role & verify role-specific access permissions
# - 'roles' is a map of role permissions
#   -> allow: grant access 
#   -> block: deny access 
#
# Default access mode & role permissions are used when service-specific
# values are not provided.
#
services:

  #------------------------------
  #  Default
  #------------------------------
  # Default access mode & permissions for File Server & API routes
  default:
    # access authorization mode: allow|block|verify
    mode: 'allow'
    # # role permissions: allow|block
    # roles:
    #   admin: 'allow'
    #   user: 'allow'

  # #------------------------------
  # #  GIS Engine
  # #------------------------------
  # meep-gis-engine:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   GetAutomationState:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   GetAutomationStateByName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   SetAutomationStateByName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   DeleteGeoDataByName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetAssetData:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   GetGeoDataByName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   UpdateGeoDataByName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'

  # #------------------------------
  # #  Location Service
  # #------------------------------
  # meep-loc-serv:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   ApByIdGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ApGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   AreaCircleSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   AreaCircleSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   AreaCircleSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   AreaCircleSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   AreaCircleSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DistanceSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PeriodicSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PeriodicSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PeriodicSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PeriodicSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PeriodicSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UserTrackingSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UserTrackingSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UserTrackingSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UserTrackingSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UserTrackingSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   UsersGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonalTrafficSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonalTrafficSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonalTrafficSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonalTrafficSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonalTrafficSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZoneStatusSubDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZoneStatusSubGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZoneStatusSubListGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZoneStatusSubPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZoneStatusSubPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonesGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   ZonesGetById:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'

  # #------------------------------
  # #  Metrics Engine
  # #------------------------------
  # meep-metrics-engine:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   IndexV2:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   PostEventQuery:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   PostHttpQuery:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   PostNetworkQuery:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   CreateEventSubscription:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   CreateNetworkSubscription:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteEventSubscriptionById:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteNetworkSubscriptionById:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetEventSubscription:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetEventSubscriptionById:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetNetworkSubscription:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetNetworkSubscriptionById:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'

  # #------------------------------
  # #  Mobility Group Manager
  # #------------------------------
  # meep-mg-manager:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   CreateMobilityGroup:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   CreateMobilityGroupApp:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   CreateMobilityGroupUe:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DeleteMobilityGroup:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   DeleteMobilityGroupApp:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   GetMobilityGroup:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   GetMobilityGroupApp:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   GetMobilityGroupAppList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   GetMobilityGroupList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SetMobilityGroup:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SetMobilityGroupApp:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   TransferAppState:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'

  # #------------------------------
  # #  Monitoring Engine
  # #------------------------------
  # meep-mon-engine:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   GetStates:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'

  # #------------------------------
  # #  Platform Controller
  # #------------------------------
  # meep-platform-ctrl:
  #   # File server routes: names provided to file server routes during router initialization
  #   AltSw:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   AltFe:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   PriSw:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   PriFe:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'

  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   CreateSandbox:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   CreateSandboxWithName:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteSandbox:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteSandboxList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetSandbox:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   GetSandboxList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   CreateScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteScenarioList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   GetScenarioList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   SetScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   Authorize:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   LoginOAuth:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   LoginUser:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   LogoutUser:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   TriggerWatchdog:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'

  # #------------------------------
  # #  RNI Service
  # #------------------------------
  # meep-rnis:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   Layer2MeasInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   PlmnInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   RabInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   S1BearerInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionLinkListSubscriptionsGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'

  # #------------------------------
  # #  WAI Service
  # #------------------------------
  # meep-wais:
  #   # REST API endpoint routes: names provided to endpoint routes during router initialization
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   ApInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   StaInfoGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionLinkListSubscriptionsGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsDELETE:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsGET:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsPOST:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
  #   SubscriptionsPUT:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'

  # #------------------------------
  # #  Sandbox Controller
  # #------------------------------
  # meep-sandbox-ctrl:
  #   # File server routes
  #   AltSw:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   PriSw:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'

  #   # REST API endpoints
  #   Index:
  #     # access authorization mode: allow|block|verify
  #     mode: 'block'
  #   ActivateScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   GetActiveNodeServiceMaps:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetActiveScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   TerminateScenario:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'allow'
  #   CreateReplayFile:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   CreateReplayFileFromScenarioExec:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteReplayFile:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   DeleteReplayFileList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetReplayFile:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetReplayFileList:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   GetReplayStatus:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   LoopReplay:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   PlayReplayFile:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   StopReplayFile:
  #     # access authorization mode: allow|block|verify
  #     mode: 'verify'
  #     # role permissions: allow|block
  #     roles:
  #       admin: 'allow'
  #       user: 'block'
  #   SendEvent:
  #     # access authorization mode: allow|block|verify
  #     mode: 'allow'
